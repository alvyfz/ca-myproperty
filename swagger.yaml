openapi: "3.0.2"
info:
  title: myProperty
  description: "API for myProperty"
  version: "0.0.1"
servers:
  - url: https://api.server.test/v1

tags:
  - name: Property
    description: Everything about proeprties
  - name: User
    description: Everything about users
  - name: Developer
    description: Everything about developers
  - name: Transaction 
    description: Everything about transactions
  - name: Property Type
    description: Everything about propertyTypes
  - name: Wishlist
    description: Everything about wishlists
  - name: Chat
    description: Everything about chats

paths:
  /property:
    post:
      tags:
        - Property
      summary: Create new property 
      parameters:
        - in: body
          name: property
          required: true
          schema:
            properties:
              name:
                type: string
              price:
                type: integer
              description:
                type: string
              bedroom:
                type: integer
              bathroom:
                type: integer
              surface_are:
                type: integer
              building_area:
                type: integer
              location:
                type: string
              property_type_id:
                type: uint
              user_id:
                type: uint
              developer_id: 
                type: uint
      responses:
        "200":
          description: OK

        "400":
          description: Bad Request
  /property/{id}:
    put:
      tags:
        - Property
      summary: Edit a property
      parameters:
        - in: body
          name: property
          required: true
          schema:
            $ref: "#components/schemas/Property"
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                properties:
                  status:
                    example: success
                  message:
                    example: Property Updated
                  data:
                    $ref: "#components/schemas/Property"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  status:
                    example: err
                  message:
                    example: Bad Request
  /property/{property_id}:
    delete:
      tags:
        - Property
      summary: Delete a specified property
      parameters:
        - in: path
          name: property_id
          schema:
            type: uint
          description: Id of Property to be deleted
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                properties:
                  status:
                    example: success
                  message:
                    example: Property Deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  status:
                    example: err
                  message:
                    example: Bad Request
        "401":
          description: User Unauthorized
          content:
            application/json:
              schema:
                properties:
                  status:
                    example: err
                  message:
                    example: User Unauthorized
                    
  /user/login:
    post:
      tags:
        - User
      summary: Logs user into system
      parameters:
        - in: query
          name: username
          schema:
            type: string
          required: true
        - in: query
          name: password
          schema:
            type: string
          required: true
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
  /user:
    post:
      tags:
        - User
      summary: Register new user
      parameters:
        - in: body
          name: user
          required: true
          schema:
            properties:
              username:
                type: string
              password:
                type: string
                format: password
              email:
                type: string
              fullname:
                type: string
              date_of_birth:
                type: string
                format: date-time
              phone_number:
                type: string
              role_id:
                type: integer
              address:
                $ref: "#components/schemas/Address"
      responses:
        "200":
          description: OK

        "400":
          description: Bad Request
  /product:
    post:
      tags:
        - Product
      summary: Create a new product
      parameters:
        - in: body
          name: product
          required: true
          schema:
            $ref: "#components/schemas/Product"
      responses:
        "405":
          description: Invalid input
    put:
      tags:
        - Product
      summary: Edit an existing product
      parameters:
        - in: body
          name: product
          required: true
          schema:
            $ref: "#components/schemas/Product"
      responses:
        "201":
          description: Updated
        "400":
          description: Bad Request
  /order:
    post:
      tags:
        - Order
      summary: Place a laundry order
      parameters:
        - in: body
          name: laundromat
          required: true
          schema:
            $ref: "#components/schemas/Laundromat"
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
    put:
      tags:
        - Order
      summary: Edit an existing laundromat
      parameters:
        - in: body
          name: laundromat
          required: true
          schema:
            $ref: "#components/schemas/Laundromat"
      responses:
        "201":
          description: Updated
        "400":
          description: Bad Request

components:
  schemas:
    Address:
      type: object
      properties:
        id:
          type: integer
        street:
          type: string
        postal_code:
          type: integer
        city:
          type: string
        province:
          type: string
    Property:
      type: object
      properties:
        name: 
          type: string
        price:
          type: integer
        description:
          type: string
        bedroom:
          type: integer
        bathroom:
          type: integer
        surface_are:
          type: integer
        building_area:
          type: integer
        location:
          type: string
        property_type_id:
          type: uint
        user_id:
          type: uint
        developer_id: 
          type: uint
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
          format: password
        phone_number:
          type: string
        gender:
          type: string
        city:
          type: string
    Developer:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        city:
          type: string
        user_id:
          type: uint
    Transaction:
      type: object
      properties:
        user_id: 
          type: uint
        property_id:
          type: uint
    PropertyType:
      type: object
      properties:
          name: 
            type: string
    Wishlist:
      type: object
      properties:
        user_id:
          type: uint
        property_id:
          type: uint
    Chat:
      type: object
      properties:
        user_id:
          type: uint
        developer_id:
          type: uint